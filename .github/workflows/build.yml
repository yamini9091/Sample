name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Run a multi-line script
        run: |
          cd restapi/
          chmod +x ./rest_api.sh
          ./rest_api.sh

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
    
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  
      - name: Set Docker image tag
        id: image_tag
        run: echo "IMAGE_TAG=$(date +%s)" >> $GITHUB_ENV
  
      - name: Build and tag Docker image
        run: docker build . --file restapi/Dockerfile --tag yaminiholla09/cais:${{ env.IMAGE_TAG }}
  
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'docker.io/yaminiholla09/cais:${{ env.IMAGE_TAG }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
  
      - name: Push Docker image
        run: docker push yaminiholla09/cais:${{ env.IMAGE_TAG }}   

      - name: Run Terrascan
        id: terrascan
        uses: khulnasoft/terrasec-action@main
        with:
          iac_type: 'terraform'
          iac_version: 'v14'
          policy_type: 'aws'
          only_warn: true
          iac_dir: 'restapi'

      - name: Terraform Fmt
        id: fmt
        run: |
          cd restapi
          terraform fmt -check
        continue-on-error: true

      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
          echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials

      - name: Terraform init
        id: init
        run: |
          cd restapi
          terraform init

      - name: Terraform validate
        id: validate
        run: |
          cd restapi
          terraform validate

      - name: Terraform plan
        id: plan
        run: |
          cd restapi
          terraform plan
        
      - name: Terraform apply
        id: apply
        run: |
          cd restapi
          terraform apply -auto-approve
